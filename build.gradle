import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
    id 'net.darkhax.curseforgegradle' version '1.1.23'
}

version = project.mod_version
group = project.maven_group

tasks.register('publishMod') {
    group = "publishing"

    dependsOn "publishCurseForge"
    dependsOn "modrinth"
}

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    group = "publishing"

    disableVersionDetection()

    apiToken = System.getenv("CURSEFORGE_UPLOAD");

    def mainFile = upload(901484, remapJar)
    mainFile.addGameVersion("1.20")
    mainFile.addJavaVersion("18")
    mainFile.displayName = "View Bobbing Options ${mod_version}"
    mainFile.addModLoader("Fabric")
    def fabricApi = 306612
    def modmenu= 308702
    def yacl =  667299
    mainFile.addRequirement(fabricApi)
    mainFile.addOptional(modmenu, yacl)
}

modrinth {
    token = System.getenv("MODRINTH_UPLOAD")
    projectId = archives_base_name
    versionName = "ViewBobbingOptions " + mod_version
    versionNumber = mod_version
    uploadFile = remapJar
    gameVersions = ["1.20",]
    loaders = ["fabric"]
    dependencies {
        required.project "fabric-api"
        required.project "yacl"
        optional.project "modmenu"
    }
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url = "https://maven.terraformersmc.com/" } // Mod Menu
    maven { url = "https://maven.shedaniel.me/" } // Cloth Config
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:${yacl_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modCompileOnly "com.terraformersmc:modmenu:${modmenu_version}"
    modCompileOnly "maven.modrinth:sodium:mc1.20-0.4.10" // 1.20 -> 1.20.6
    modCompileOnly "maven.modrinth:iris:1.6.11+1.20.1" // 1.20, 1.20.1 -> 1.20.6

    implementation "com.github.LlamaLad7:MixinExtras:0.1.1"
    annotationProcessor "com.github.LlamaLad7:MixinExtras:0.1.1"
    include "com.github.LlamaLad7:MixinExtras:0.1.1"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
